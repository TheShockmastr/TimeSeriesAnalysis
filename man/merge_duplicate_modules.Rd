% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MDS_GO_results_functions.R
\name{merge_duplicate_modules}
\alias{merge_duplicate_modules}
\title{merge_MDS modules}
\usage{
merge_duplicate_modules(the_data)
}
\arguments{
\item{the_data}{dataframe as returned by \code{calculate_and_format_MDS}}
}
\value{
the_data The updated inputted dataframe
}
\description{
Function finds and merges GOs from separate modules

If a go appears as a part of two or more modules, the function will remove the duplicate
GOs and keep a single version which has all the relevant modules as it's source
ex: blue/yellow/brown if the GO was found in the blue, yellow, and brown cluster
It also finds the color which best mixes the colors of the cluster
}
\examples{
TS_object<-create_example_object_for_R()
TS_object <- normalize_timeSeries_with_deseq2(time_object=TS_object)
#Perform conditional differential gene expression analysis
TS_object<-conditional_DE_wrapper(TS_object)
#Extract genes for PART clustering based on defined log(2)foldChange threshold
signi_genes<-select_genes_with_l2fc(TS_object)

#Use all samples, but implement a custom order. In this case it is reversed
sample_data<-exp_sample_data(TS_object)
samps_2<-sample_data$sample[sample_data$group==TS_object@group_names[2]]
samps_1<-sample_data$sample[sample_data$group==TS_object@group_names[1]]

#Create the matrix that will be used for PART clustering
TS_object<-prep_counts_for_PART(object=TS_object,target_genes=signi_genes,scale=TRUE,target_samples=c(samps_2,samps_1))
TS_object<-compute_PART(TS_object,part_recursion=10,part_min_clust=10,dist_param="euclidean", hclust_param="average",vignette_run=TRUE)
TS_object<-run_gprofiler_PART_clusters(TS_object,vignette_run=TRUE) #Run the gprofiler analysis
#Set to null to not save results
gpro_res<-gprofiler_cluster_analysis(TS_object,'GO:BP',save_path=NULL)
GO_clusters<-gpro_res[['GO_df']]
TS_object <- add_semantic_similarity_data(TS_object,ont_sem_sim='BP')
plot_data<-calculate_and_format_MDS(GO_clusters,TS_object@sem_list)
plot_data<-merge_duplicate_modules(plot_data)

}
