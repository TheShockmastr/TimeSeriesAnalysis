% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DE_PART_results_functions.R
\name{prepare_top_annotation_PART_heat}
\alias{prepare_top_annotation_PART_heat}
\title{Create top annotation for PART heatmap}
\usage{
prepare_top_annotation_PART_heat(object)
}
\arguments{
\item{object}{A time series object}
}
\value{
A list containing the two types of top annotaiton and the named vector used to create the column splits
}
\description{
This function is intended to be used within \code{PART_heat_map}

The top annotation shows annotation blocks for the groups as well as annotation
gradients for the time points.
Two sets of top annotations are created, one labelled and one unlabeled.
In addition, the column splits are created based on the replicates
}
\examples{
TS_object<-create_example_object_for_R()
TS_object <- normalize_timeSeries_with_deseq2(time_object=TS_object)
#Perform conditional differential gene expression analysis
TS_object<-conditional_DE_wrapper(TS_object)

#Extract genes for PART clustering based on defined log(2)foldChange threshold
signi_genes<-select_genes_with_l2fc(TS_object)

#Use all samples, but implement a custom order. In this case it is reversed
sample_data<-exp_sample_data(TS_object)
TS_groups<-slot(TS_object,'group_names')
samps_2<-sample_data$sample[sample_data$group==TS_groups[2]]
samps_1<-sample_data$sample[sample_data$group==TS_groups[1]]

#Create the matrix that will be used for PART clustering
TS_object<-prep_counts_for_PART(object=TS_object,target_genes=signi_genes,scale=TRUE,target_samples=c(samps_2,samps_1))
TS_object<-compute_PART(TS_object,part_recursion=10,part_min_clust=10,dist_param="euclidean", hclust_param="average",vignette_run=TRUE)
top_annot<-prepare_top_annotation_PART_heat(TS_object)

}
