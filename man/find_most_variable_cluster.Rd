% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rmarkdown_functions.R
\name{find_most_variable_cluster}
\alias{find_most_variable_cluster}
\title{Identify cluster with the most variability}
\usage{
find_most_variable_cluster(time_object, mean_ts_data)
}
\arguments{
\item{time_object}{A timeseries object}

\item{mean_ts_data}{A dataframe containing the mean trajectory for each cluster}
}
\value{
The name of the most variable cluster
}
\description{
Identifies the most variable cluster based on the mean trajectory
of each cluster. This cluster is identified for the purpose of illustration
in an rmarkdown file.
}
\examples{
TS_object<-create_example_object_for_R()
TS_object <- normalize_timeSeries_with_deseq2(time_object=TS_object)
#Perform conditional differential gene expression analysis
TS_object<-conditional_DE_wrapper(TS_object)
#Extract genes for PART clustering based on defined log(2)foldChange threshold
signi_genes<-select_genes_with_l2fc(TS_object)

#Use all samples, but implement a custom order. In this case it is reversed
sample_data<-exp_sample_data(TS_object)
samps_2<-sample_data$sample[sample_data$group==TS_object@group_names[2]]
samps_1<-sample_data$sample[sample_data$group==TS_object@group_names[1]]

#Create the matrix that will be used for PART clustering
TS_object<-prep_counts_for_PART(object=TS_object,target_genes=signi_genes,scale=TRUE,target_samples=c(samps_2,samps_1))
TS_object<-compute_PART(TS_object,part_recursion=10,part_min_clust=10,dist_param="euclidean", hclust_param="average")
TS_object<-run_gprofiler_PART_clusters(TS_object,vignette_run=TRUE) #Run the gprofiler analysis
ts_data<-calculate_cluster_traj_data(TS_object,scale_feat=TRUE) #Calculate scaled gene values for genes of clusters
mean_ts_data<-calculate_mean_cluster_traj(ts_data) #Calculate the mean scaled values for each cluster
target_clust<-find_most_variable_cluster(TS_object,mean_ts_data)

}
