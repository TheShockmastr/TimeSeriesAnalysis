% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DE_PART_results_functions.R
\name{PART_heat_map}
\alias{PART_heat_map}
\title{Create and plot PART heatmap}
\usage{
PART_heat_map(object, heat_name = "custom_heat_map")
}
\arguments{
\item{object}{A time series object}

\item{heat_name}{The file name given to the saved heatmap}
}
\value{
none
}
\description{
The heatmap shows selected genes as rows and replicates of the time series experiment
as columns.
Gene clusters are identified by colored row annotation. Replicates are split
by their grouping (conditional) and ordered (within each other) via time points
The legend for groupings, clusters, timepoints, and heatmap values is given on
the right hand side of the heatmap.

the heatmap is saved twice, once
in png format, and the other in svg format
}
\examples{
TS_object<-create_example_object_for_R()
TS_object <- normalize_timeSeries_with_deseq2(time_object=TS_object)
#Perform conditional differential gene expression analysis
TS_object<-conditional_DE_wrapper(TS_object)

#Extract genes for PART clustering based on defined log(2)foldChange threshold
signi_genes<-select_genes_with_l2fc(TS_object)

#Use all samples, but implement a custom order. In this case it is reversed
sample_data<-exp_sample_data(TS_object)
samps_2<-sample_data$sample[sample_data$group==TS_object@group_names[2]]
samps_1<-sample_data$sample[sample_data$group==TS_object@group_names[1]]

#Create the matrix that will be used for PART clustering
TS_object<-prep_counts_for_PART(object=TS_object,target_genes=signi_genes,scale=TRUE,target_samples=c(samps_2,samps_1))
TS_object<-compute_PART(TS_object,part_recursion=10,part_min_clust=10,dist_param="euclidean", hclust_param="average")
#Heatmap will be saved to main directory
PART_heat_map(TS_object,'PART_heat') #Create a summary heatmap

}
